==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:15)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 997.703 ; gain = 899.832
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 997.703 ; gain = 899.832
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 997.703 ; gain = 899.832
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 997.703 ; gain = 899.832
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 997.703 ; gain = 899.832
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.703 ; gain = 899.832
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (4.414ns) exceeds the target (target clock period: 5ns, clock uncertainty: 1.35ns, effective delay budget: 3.65ns).
WARNING: [HLS 200-1016] The critical path in module 'parallel_to_AXI' consists of the following:	wire read on port 'AXI' (parallel_to_AXI/src/parallel_to_AXI.cpp:4) [27]  (0 ns)
	'add' operation ('add_ln215') [60]  (2.92 ns)
	blocking operation 1.49 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 15.152 seconds; current allocated memory: 191.401 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.186 seconds; current allocated memory: 192.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.453 seconds; current allocated memory: 193.664 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:17 . Memory (MB): peak = 997.703 ; gain = 899.832
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 226.55 MHz
INFO: [HLS 200-112] Total elapsed time: 17.416 seconds; peak allocated memory: 193.664 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:15)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.512 ; gain = 880.188
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.512 ; gain = 880.188
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.512 ; gain = 880.188
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.512 ; gain = 880.188
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.512 ; gain = 880.188
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 998.512 ; gain = 880.188
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first 15 cycles (II = 15).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [HLS 200-885] Unable to schedule bus read on port 'gmem' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 11.992 seconds; current allocated memory: 191.453 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.168 seconds; current allocated memory: 192.851 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.436 seconds; current allocated memory: 193.665 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:14 . Memory (MB): peak = 998.512 ; gain = 880.188
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 273.97 MHz
INFO: [HLS 200-112] Total elapsed time: 14.046 seconds; peak allocated memory: 193.665 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:15)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.004 ; gain = 900.219
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.004 ; gain = 900.219
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.004 ; gain = 900.219
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.004 ; gain = 900.219
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.004 ; gain = 900.219
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 998.004 ; gain = 900.219
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first 15 cycles (II = 15).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [HLS 200-885] Unable to schedule bus read on port 'gmem' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 11.885 seconds; current allocated memory: 191.518 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.169 seconds; current allocated memory: 192.975 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.424 seconds; current allocated memory: 193.731 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:14 . Memory (MB): peak = 998.004 ; gain = 900.219
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 273.97 MHz
INFO: [HLS 200-112] Total elapsed time: 13.876 seconds; peak allocated memory: 193.731 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'gmem' has a depth of '256'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-322] Starting VHDL simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=false
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=false
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=false
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:15)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.035 ; gain = 879.629
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.035 ; gain = 879.629
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 998.035 ; gain = 879.629
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 998.035 ; gain = 879.629
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 998.035 ; gain = 879.629
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 998.035 ; gain = 879.629
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first 15 cycles (II = 15).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [HLS 200-885] Unable to schedule bus read on port 'gmem' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.871 seconds; current allocated memory: 191.886 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.188 seconds; current allocated memory: 193.285 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.436 seconds; current allocated memory: 194.099 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:15 . Memory (MB): peak = 998.035 ; gain = 879.629
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 273.97 MHz
INFO: [HLS 200-112] Total elapsed time: 15.112 seconds; peak allocated memory: 194.099 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'gmem' has a depth of '256'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-322] Starting VHDL simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=false
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=false
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=false
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:15)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.645 ; gain = 899.910
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.645 ; gain = 899.910
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.645 ; gain = 899.910
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.645 ; gain = 899.910
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.645 ; gain = 899.910
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 997.645 ; gain = 899.910
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first 15 cycles (II = 15).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [HLS 200-885] Unable to schedule bus read on port 'gmem' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.251 seconds; current allocated memory: 191.888 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.177 seconds; current allocated memory: 193.317 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.471 seconds; current allocated memory: 194.131 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:14 . Memory (MB): peak = 997.645 ; gain = 899.910
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 273.97 MHz
INFO: [HLS 200-112] Total elapsed time: 14.513 seconds; peak allocated memory: 194.131 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:15)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.605 ; gain = 900.789
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.605 ; gain = 900.789
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.605 ; gain = 900.789
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.605 ; gain = 900.789
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 998.605 ; gain = 900.789
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 998.605 ; gain = 900.789
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first 15 cycles (II = 15).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [HLS 200-885] Unable to schedule bus read on port 'gmem' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.312 seconds; current allocated memory: 191.902 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.228 seconds; current allocated memory: 193.301 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.45 seconds; current allocated memory: 194.115 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:14 . Memory (MB): peak = 998.605 ; gain = 900.789
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 273.97 MHz
INFO: [HLS 200-112] Total elapsed time: 14.478 seconds; peak allocated memory: 194.115 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'gmem' has a depth of '256'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-322] Starting VHDL simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:15)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 997.047 ; gain = 878.586
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 997.047 ; gain = 878.586
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 997.047 ; gain = 878.586
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:01 ; elapsed = 00:00:12 . Memory (MB): peak = 997.047 ; gain = 878.586
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 997.047 ; gain = 878.586
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:13 . Memory (MB): peak = 997.047 ; gain = 878.586
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first 15 cycles (II = 15).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [HLS 200-885] Unable to schedule bus read on port 'gmem' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 13.056 seconds; current allocated memory: 191.903 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.204 seconds; current allocated memory: 193.301 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.575 seconds; current allocated memory: 194.116 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.047 ; gain = 878.586
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 273.97 MHz
INFO: [HLS 200-112] Total elapsed time: 15.396 seconds; peak allocated memory: 194.116 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'gmem' has a depth of '256'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:15)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<8>(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<8>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:15)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.539 ; gain = 879.059
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.539 ; gain = 879.059
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.539 ; gain = 879.059
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.539 ; gain = 879.059
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:11 . Memory (MB): peak = 997.539 ; gain = 879.059
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:12 . Memory (MB): peak = 997.539 ; gain = 879.059
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first 15 cycles (II = 15).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [HLS 200-885] Unable to schedule bus read on port 'gmem' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 12.319 seconds; current allocated memory: 191.902 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.184 seconds; current allocated memory: 193.301 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.424 seconds; current allocated memory: 194.115 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:14 . Memory (MB): peak = 997.539 ; gain = 879.059
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 273.97 MHz
INFO: [HLS 200-112] Total elapsed time: 14.345 seconds; peak allocated memory: 194.115 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'gmem' has a depth of '256'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-322] Starting VHDL simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
ERROR: [IMPL 213-28] Failed to generate IP.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=false
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file parallel_to_AXI/solution1/impl/export.zip
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 997.656 ; gain = 879.176
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 997.656 ; gain = 879.176
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:14 . Memory (MB): peak = 997.656 ; gain = 879.176
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.656 ; gain = 879.176
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.656 ; gain = 879.176
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.656 ; gain = 879.176
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [HLS 200-880] The II Violation in module 'parallel_to_AXI' (Function: parallel_to_AXI): Unable to enforce a carried dependence constraint (II = 11, distance = 1, offset = 1) between bus read on port 'gmem' and bus request on port 'gmem'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first 15 cycles (II = 15).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [HLS 200-885] Unable to schedule bus read on port 'gmem' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 16, Depth = 16.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 15.888 seconds; current allocated memory: 191.975 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.202 seconds; current allocated memory: 193.375 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.523 seconds; current allocated memory: 194.189 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:18 . Memory (MB): peak = 997.656 ; gain = 879.176
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 273.97 MHz
INFO: [HLS 200-112] Total elapsed time: 18.424 seconds; peak allocated memory: 194.189 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file parallel_to_AXI/solution1/impl/export.zip
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:37:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:25)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:37)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:31)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:03 ; elapsed = 00:00:13 . Memory (MB): peak = 998.270 ; gain = 879.184
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:03 ; elapsed = 00:00:13 . Memory (MB): peak = 998.270 ; gain = 879.184
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:03 ; elapsed = 00:00:13 . Memory (MB): peak = 998.270 ; gain = 879.184
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:03 ; elapsed = 00:00:13 . Memory (MB): peak = 998.270 ; gain = 879.184
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:13 . Memory (MB): peak = 998.270 ; gain = 879.184
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:14 . Memory (MB): peak = 998.270 ; gain = 879.184
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15.
WARNING: [HLS 200-871] Estimated clock period (3.793ns) exceeds the target (target clock period: 5ns, clock uncertainty: 1.35ns, effective delay budget: 3.65ns).
WARNING: [HLS 200-1016] The critical path in module 'parallel_to_AXI' consists of the following:	wire read on port 'AXI' (parallel_to_AXI/src/parallel_to_AXI.cpp:4) [28]  (0 ns)
	'add' operation ('add_ln215') [43]  (2.92 ns)
	blocking operation 0.873 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 14.099 seconds; current allocated memory: 191.763 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.154 seconds; current allocated memory: 193.107 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.458 seconds; current allocated memory: 194.179 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:04 ; elapsed = 00:00:16 . Memory (MB): peak = 998.270 ; gain = 879.184
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 263.64 MHz
INFO: [HLS 200-112] Total elapsed time: 16.165 seconds; peak allocated memory: 194.179 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file parallel_to_AXI/solution1/impl/export.zip
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:39:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:39:17)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:38:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:38:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:25)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:37)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:31)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.344 ; gain = 899.590
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.344 ; gain = 899.590
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.344 ; gain = 899.590
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:15 . Memory (MB): peak = 997.344 ; gain = 899.590
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:16 . Memory (MB): peak = 997.344 ; gain = 899.590
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:17 . Memory (MB): peak = 997.344 ; gain = 899.590
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15.
WARNING: [HLS 200-871] Estimated clock period (5.807ns) exceeds the target (target clock period: 5ns, clock uncertainty: 1.35ns, effective delay budget: 3.65ns).
WARNING: [HLS 200-1016] The critical path in module 'parallel_to_AXI' consists of the following:	wire read on port 'AXI' (parallel_to_AXI/src/parallel_to_AXI.cpp:4) [28]  (0 ns)
	'add' operation ('add_ln215') [43]  (2.92 ns)
	blocking operation 2.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 16.97 seconds; current allocated memory: 191.761 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.266 seconds; current allocated memory: 193.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'rdata' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_none'.
WARNING: [RTGEN 206-101] Port 'sta' with mode 'ap_none' may require an associated data valid signal to correctly communicate with other blocks or a test bench; automatic C/RTL co-simulation may not be able to verify such a port.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.774 seconds; current allocated memory: 194.182 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:04 ; elapsed = 00:00:20 . Memory (MB): peak = 997.344 ; gain = 899.590
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 172.21 MHz
INFO: [HLS 200-112] Total elapsed time: 20.406 seconds; peak allocated memory: 194.182 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file parallel_to_AXI/solution1/impl/export.zip
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:341)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1352:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3098)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<32, true>::logic operator&<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1465:3096)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:39:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:39:17)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:38:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:38:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:25)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<33>(ap_int<33> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<($_0)32, true>::logic operator&<32, false>(ap_int_base<32, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:22)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:37)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:31)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:17 . Memory (MB): peak = 997.910 ; gain = 912.223
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:17 . Memory (MB): peak = 997.910 ; gain = 912.223
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:18 . Memory (MB): peak = 997.910 ; gain = 912.223
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:18 . Memory (MB): peak = 997.910 ; gain = 912.223
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:18 . Memory (MB): peak = 997.910 ; gain = 912.223
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:03 ; elapsed = 00:00:19 . Memory (MB): peak = 997.910 ; gain = 912.223
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15.
WARNING: [HLS 200-871] Estimated clock period (5.807ns) exceeds the target (target clock period: 5ns, clock uncertainty: 1.35ns, effective delay budget: 3.65ns).
WARNING: [HLS 200-1016] The critical path in module 'parallel_to_AXI' consists of the following:	wire read on port 'AXI' (parallel_to_AXI/src/parallel_to_AXI.cpp:4) [28]  (0 ns)
	'add' operation ('add_ln324') [60]  (2.92 ns)
	blocking operation 2.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 19.252 seconds; current allocated memory: 191.762 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.191 seconds; current allocated memory: 193.107 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_ovld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_ovld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.411 seconds; current allocated memory: 194.187 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:22 . Memory (MB): peak = 997.910 ; gain = 912.223
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 172.21 MHz
INFO: [HLS 200-112] Total elapsed time: 21.927 seconds; peak allocated memory: 194.187 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file parallel_to_AXI/solution1/impl/export.zip
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:39:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:39:17)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:38:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:38:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:25)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:37)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:31)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:09 . Memory (MB): peak = 997.496 ; gain = 879.133
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:09 . Memory (MB): peak = 997.496 ; gain = 879.133
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:10 . Memory (MB): peak = 997.496 ; gain = 879.133
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:10 . Memory (MB): peak = 997.496 ; gain = 879.133
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:10 . Memory (MB): peak = 997.496 ; gain = 879.133
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:10 . Memory (MB): peak = 997.496 ; gain = 879.133
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15.
WARNING: [HLS 200-871] Estimated clock period (5.807ns) exceeds the target (target clock period: 5ns, clock uncertainty: 1.35ns, effective delay budget: 3.65ns).
WARNING: [HLS 200-1016] The critical path in module 'parallel_to_AXI' consists of the following:	wire read on port 'AXI' (parallel_to_AXI/src/parallel_to_AXI.cpp:4) [28]  (0 ns)
	'add' operation ('add_ln324_1') [43]  (2.92 ns)
	blocking operation 2.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 10.568 seconds; current allocated memory: 191.636 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.155 seconds; current allocated memory: 192.978 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_ovld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_ovld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.318 seconds; current allocated memory: 194.066 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:12 . Memory (MB): peak = 997.496 ; gain = 879.133
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 172.21 MHz
INFO: [HLS 200-112] Total elapsed time: 12.306 seconds; peak allocated memory: 194.066 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [HLS 200-10] Analyzing design file 'parallel_to_AXI/src/parallel_to_AXI.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<8, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1853)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<1, false>::operator==<32, true>(ap_int_base<32, true> const&) const' into 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' (C:/Xilinx/Vitis/2020.1/common/technology/autopilot\ap_int_base.h:1620:1850)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:39:15)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:39:17)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:38:9)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:38:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:36:11)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:34:22)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:32:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:31:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:10)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:30:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:29:7)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:25)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:39)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:27:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:25:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:24:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:10)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:23:16)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:37)
INFO: [HLS 214-131] Inlining function 'bool operator==<8, false>(ap_int_base<8, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:21:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::operator=(ap_uint<1> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'ap_uint<1>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:19:16)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::operator=(ap_uint<8> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:8)
INFO: [HLS 214-131] Inlining function 'ap_uint<8>::ap_uint(int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:18:10)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::operator=(ap_uint<32> const&)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::operator unsigned long long() const' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:17:7)
INFO: [HLS 214-131] Inlining function 'bool operator==<1, false>(ap_int_base<1, false> const&, int)' into 'parallel_to_AXI(ap_uint<32>, ap_uint<32>, ap_uint<32>*, ap_uint<32>, ap_uint<8>, ap_uint<8>*, ap_uint<32>*)' (parallel_to_AXI/src/parallel_to_AXI.cpp:15:31)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:02 ; elapsed = 00:00:09 . Memory (MB): peak = 997.711 ; gain = 900.051
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:02 ; elapsed = 00:00:09 . Memory (MB): peak = 997.711 ; gain = 900.051
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:02 ; elapsed = 00:00:09 . Memory (MB): peak = 997.711 ; gain = 900.051
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:02 ; elapsed = 00:00:09 . Memory (MB): peak = 997.711 ; gain = 900.051
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:09 . Memory (MB): peak = 997.711 ; gain = 900.051
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:02 ; elapsed = 00:00:10 . Memory (MB): peak = 997.711 ; gain = 900.051
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'parallel_to_AXI' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'parallel_to_AXI'.
WARNING: [SCHED 204-63] Unable to schedule bus read on port 'gmem' within the first cycle (II = 1).
Please consider increasing the target initiation interval of the pipeline.
WARNING: [SCHED 204-63] Unable to schedule bus write on port 'gmem' within the last cycle (II = 1).
Please consider increasing the initiation interval of the pipeline.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15.
WARNING: [HLS 200-871] Estimated clock period (5.807ns) exceeds the target (target clock period: 5ns, clock uncertainty: 1.35ns, effective delay budget: 3.65ns).
WARNING: [HLS 200-1016] The critical path in module 'parallel_to_AXI' consists of the following:	wire read on port 'AXI' (parallel_to_AXI/src/parallel_to_AXI.cpp:4) [28]  (0 ns)
	'add' operation ('add_ln324') [58]  (2.92 ns)
	blocking operation 2.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 10.187 seconds; current allocated memory: 191.636 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.123 seconds; current allocated memory: 192.978 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'parallel_to_AXI' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wdata' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/wadd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/rdata' to 'ap_ovld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/radd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/cmd' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/sta' to 'ap_ovld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'parallel_to_AXI/AXI' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'parallel_to_AXI' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Register 'clear_flag' is power-on initialization.
INFO: [RTGEN 206-100] Finished creating RTL model for 'parallel_to_AXI'.
INFO: [HLS 200-111]  Elapsed time: 0.292 seconds; current allocated memory: 194.066 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:00:03 ; elapsed = 00:00:12 . Memory (MB): peak = 997.711 ; gain = 900.051
INFO: [VHDL 208-304] Generating VHDL RTL for parallel_to_AXI.
INFO: [VLOG 209-307] Generating Verilog RTL for parallel_to_AXI.
INFO: [HLS 200-789] **** Estimated Fmax: 172.21 MHz
INFO: [HLS 200-112] Total elapsed time: 11.829 seconds; peak allocated memory: 194.066 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 5ns.
INFO: [HLS 200-10] Setting target device to 'xc7s25-csga324-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-435] Setting 'config_flow -target' configuration: config_interface -m_axi_alignment_byte_size=0
INFO: [HLS 200-1464] Running solution command: config_interface -clock_enable=0
INFO: [HLS 200-1464] Running solution command: config_interface -default_slave_interface=none
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_addr64=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=4
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_auto_max_ports=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_bitwidth=1024
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_read_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=0
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_write_burst_length=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_min_bitwidth=8
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_read_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_num_write_outstanding=16
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=off
INFO: [HLS 200-1464] Running solution command: config_interface -register_io=off
INFO: [HLS 200-1464] Running solution command: config_interface -s_axilite_data64=0
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=vhdl
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file parallel_to_AXI/solution1/impl/export.zip
