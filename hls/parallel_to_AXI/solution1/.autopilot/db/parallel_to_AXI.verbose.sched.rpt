

================================================================
== Vitis HLS Report for 'parallel_to_AXI'
================================================================
* Date:           Sat Jul 31 14:20:46 2021

* Version:        2020.1 (Build 2902540 on Wed May 27 20:16:15 MDT 2020)
* Project:        parallel_to_AXI
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: spartan7
* Target device:  xc7s25-csga324-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 5.807 ns |   1.35 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+----------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline |
    |   min   |   max   |    min    |    max    | min | max |   Type   |
    +---------+---------+-----------+-----------+-----+-----+----------+
    |       14|       14| 81.298 ns | 81.298 ns |    1|    1| function |
    +---------+---------+-----------+-----------+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 15


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 1
  Pipeline-0 : II = 1, D = 15, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.80>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @empty_0"   --->   Operation 16 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_5"   --->   Operation 17 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 19 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %wdata"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %wdata, void @empty_1, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %wadd"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %wadd, void @empty_1, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %rdata"   --->   Operation 24 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %rdata, void @empty_2, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 25 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %radd"   --->   Operation 26 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %radd, void @empty_1, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 27 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %cmd"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %cmd, void @empty_3, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %sta"   --->   Operation 30 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %sta, void @empty_2, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_0"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %AXI, void @empty_3, i32, i32, void @empty_0, i32, i32, void @empty_0, void @empty_0, void @empty_0, i32, i32, i32, i32, void @empty_0, void @empty_4"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%AXI_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %AXI" [parallel_to_AXI/src/parallel_to_AXI.cpp:4]   --->   Operation 33 'read' 'AXI_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%cmd_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %cmd" [parallel_to_AXI/src/parallel_to_AXI.cpp:4]   --->   Operation 34 'read' 'cmd_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%radd_read = read i32 @_ssdm_op_Read.ap_none.i32, i32 %radd" [parallel_to_AXI/src/parallel_to_AXI.cpp:4]   --->   Operation 35 'read' 'radd_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%wadd_read = read i32 @_ssdm_op_Read.ap_none.i32, i32 %wadd" [parallel_to_AXI/src/parallel_to_AXI.cpp:4]   --->   Operation 36 'read' 'wadd_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%wdata_read = read i32 @_ssdm_op_Read.ap_none.i32, i32 %wdata" [parallel_to_AXI/src/parallel_to_AXI.cpp:4]   --->   Operation 37 'read' 'wdata_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%clear_flag_load = load i1 %clear_flag"   --->   Operation 38 'load' 'clear_flag_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (1.20ns)   --->   "%switch_ln15 = switch i8 %cmd_read, void, i8, void, i8, void, i8, void" [parallel_to_AXI/src/parallel_to_AXI.cpp:15]   --->   Operation 39 'switch' 'switch_ln15' <Predicate = true> <Delay = 1.20>
ST_1 : Operation 40 [1/1] (1.39ns)   --->   "%store_ln324 = store i1, i1 %clear_flag, i1 %clear_flag_load"   --->   Operation 40 'store' 'store_ln324' <Predicate = (cmd_read == 3)> <Delay = 1.39>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.thread"   --->   Operation 41 'br' 'br_ln0' <Predicate = (cmd_read == 3)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln21 = br i1 %clear_flag_load, void %bb125, void %.thread" [parallel_to_AXI/src/parallel_to_AXI.cpp:21]   --->   Operation 42 'br' 'br_ln21' <Predicate = (cmd_read == 2)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%shl_ln324_1 = bitconcatenate i34 @_ssdm_op_BitConcatenate.i34.i32.i2, i32 %radd_read, i2"   --->   Operation 43 'bitconcatenate' 'shl_ln324_1' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln324_1 = zext i34 %shl_ln324_1"   --->   Operation 44 'zext' 'zext_ln324_1' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (2.92ns)   --->   "%add_ln324_1 = add i64 %zext_ln324_1, i64 %AXI_read"   --->   Operation 45 'add' 'add_ln324_1' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 2.92> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln324_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln324_1, i32, i32"   --->   Operation 46 'partselect' 'trunc_ln324_1' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%sext_ln324_1 = sext i62 %trunc_ln324_1"   --->   Operation 47 'sext' 'sext_ln324_1' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %sext_ln324_1"   --->   Operation 48 'getelementptr' 'gmem_addr_1' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (1.39ns)   --->   "%store_ln324 = store i1, i1 %clear_flag, i1 %clear_flag_load"   --->   Operation 49 'store' 'store_ln324' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 1.39>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln15 = br i1 %clear_flag_load, void %bb124, void %.thread" [parallel_to_AXI/src/parallel_to_AXI.cpp:15]   --->   Operation 50 'br' 'br_ln15' <Predicate = (cmd_read == 1)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i34 @_ssdm_op_BitConcatenate.i34.i32.i2, i32 %wadd_read, i2"   --->   Operation 51 'bitconcatenate' 'shl_ln' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln324 = zext i34 %shl_ln"   --->   Operation 52 'zext' 'zext_ln324' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (2.92ns)   --->   "%add_ln324 = add i64 %zext_ln324, i64 %AXI_read"   --->   Operation 53 'add' 'add_ln324' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 2.92> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.92> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln324, i32, i32"   --->   Operation 54 'partselect' 'trunc_ln' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln324 = sext i62 %trunc_ln"   --->   Operation 55 'sext' 'sext_ln324' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln324"   --->   Operation 56 'getelementptr' 'gmem_addr' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (1.39ns)   --->   "%store_ln324 = store i1, i1 %clear_flag, i1 %clear_flag_load"   --->   Operation 57 'store' 'store_ln324' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 1.39>
ST_1 : Operation 58 [1/1] (1.21ns)   --->   "%icmp_ln874 = icmp_eq  i8 %cmd_read, i8"   --->   Operation 58 'icmp' 'icmp_ln874' <Predicate = (cmd_read != 1 & cmd_read != 2 & cmd_read != 3)> <Delay = 1.21> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 1.21> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.80ns)   --->   "%and_ln34 = and i1 %clear_flag_load, i1 %icmp_ln874" [parallel_to_AXI/src/parallel_to_AXI.cpp:34]   --->   Operation 59 'and' 'and_ln34' <Predicate = (cmd_read != 1 & cmd_read != 2 & cmd_read != 3)> <Delay = 0.80> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln34 = br i1 %and_ln34, void %.thread, void %bb" [parallel_to_AXI/src/parallel_to_AXI.cpp:34]   --->   Operation 60 'br' 'br_ln34' <Predicate = (cmd_read != 1 & cmd_read != 2 & cmd_read != 3)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (1.39ns)   --->   "%store_ln324 = store i1, i1 %clear_flag, i1 %clear_flag_load"   --->   Operation 61 'store' 'store_ln324' <Predicate = (cmd_read != 1 & cmd_read != 2 & cmd_read != 3 & and_ln34)> <Delay = 1.39>

State 2 <SV = 1> <Delay = 3.65>
ST_2 : Operation 62 [1/1] (3.65ns)   --->   "%gmem_addr_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i32P, i32 %gmem_addr, i32"   --->   Operation 62 'writereq' 'gmem_addr_req' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 3.65>
ST_3 : Operation 63 [1/1] (3.65ns)   --->   "%write_ln324 = write void @_ssdm_op_Write.m_axi.i32P, i32 %gmem_addr, i32 %wdata_read, i4, i1 %gmem_addr_req"   --->   Operation 63 'write' 'write_ln324' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 3.65>
ST_4 : Operation 64 [5/5] (3.65ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr, void %write_ln324"   --->   Operation 64 'writeresp' 'gmem_addr_resp' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 3.65>
ST_5 : Operation 65 [4/5] (3.65ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr, void %write_ln324"   --->   Operation 65 'writeresp' 'gmem_addr_resp' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 3.65>
ST_6 : Operation 66 [3/5] (3.65ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr, void %write_ln324"   --->   Operation 66 'writeresp' 'gmem_addr_resp' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 3.65>
ST_7 : Operation 67 [2/5] (3.65ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr, void %write_ln324"   --->   Operation 67 'writeresp' 'gmem_addr_resp' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 3.65>
ST_8 : Operation 68 [7/7] (3.65ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32"   --->   Operation 68 'readreq' 'gmem_load_req' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 69 [1/5] (3.65ns)   --->   "%gmem_addr_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i32P, i32 %gmem_addr, void %write_ln324"   --->   Operation 69 'writeresp' 'gmem_addr_resp' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 3.65>
ST_9 : Operation 70 [6/7] (3.65ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32"   --->   Operation 70 'readreq' 'gmem_load_req' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 3.65>
ST_10 : Operation 71 [5/7] (3.65ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32"   --->   Operation 71 'readreq' 'gmem_load_req' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 3.65>
ST_11 : Operation 72 [4/7] (3.65ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32"   --->   Operation 72 'readreq' 'gmem_load_req' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 3.65>
ST_12 : Operation 73 [3/7] (3.65ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32"   --->   Operation 73 'readreq' 'gmem_load_req' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 3.65>
ST_13 : Operation 74 [2/7] (3.65ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32"   --->   Operation 74 'readreq' 'gmem_load_req' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 3.65>
ST_14 : Operation 75 [1/7] (3.65ns)   --->   "%gmem_load_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P, i32 %gmem_addr_1, i32"   --->   Operation 75 'readreq' 'gmem_load_req' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 3.65>
ST_15 : Operation 76 [1/1] (3.65ns)   --->   "%gmem_addr_1_read = read i32 @_ssdm_op_Read.m_axi.i32P, i32 %gmem_addr_1, i1 %gmem_load_req"   --->   Operation 76 'read' 'gmem_addr_1_read' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 3.65> <CoreInst = "m_axi">   --->   Core 55 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 77 [1/1] (0.00ns)   --->   "%write_ln324 = write void @_ssdm_op_Write.ap_ovld.i32P, i32 %rdata, i32 %gmem_addr_1_read"   --->   Operation 77 'write' 'write_ln324' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 0.00>
ST_15 : Operation 78 [1/1] (0.00ns)   --->   "%write_ln324 = write void @_ssdm_op_Write.ap_ovld.i8P, i8 %sta, i8"   --->   Operation 78 'write' 'write_ln324' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 0.00>
ST_15 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln26 = br void %.thread" [parallel_to_AXI/src/parallel_to_AXI.cpp:26]   --->   Operation 79 'br' 'br_ln26' <Predicate = (cmd_read == 2 & !clear_flag_load)> <Delay = 0.00>
ST_15 : Operation 80 [1/1] (0.00ns)   --->   "%write_ln324 = write void @_ssdm_op_Write.ap_ovld.i8P, i8 %sta, i8"   --->   Operation 80 'write' 'write_ln324' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 0.00>
ST_15 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln20 = br void %.thread" [parallel_to_AXI/src/parallel_to_AXI.cpp:20]   --->   Operation 81 'br' 'br_ln20' <Predicate = (cmd_read == 1 & !clear_flag_load)> <Delay = 0.00>
ST_15 : Operation 82 [1/1] (0.00ns)   --->   "%write_ln324 = write void @_ssdm_op_Write.ap_ovld.i8P, i8 %sta, i8"   --->   Operation 82 'write' 'write_ln324' <Predicate = (cmd_read != 1 & cmd_read != 2 & cmd_read != 3 & and_ln34)> <Delay = 0.00>
ST_15 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.thread" [parallel_to_AXI/src/parallel_to_AXI.cpp:40]   --->   Operation 83 'br' 'br_ln40' <Predicate = (cmd_read != 1 & cmd_read != 2 & cmd_read != 3 & and_ln34)> <Delay = 0.00>
ST_15 : Operation 84 [1/1] (0.00ns)   --->   "%ret_ln42 = ret" [parallel_to_AXI/src/parallel_to_AXI.cpp:42]   --->   Operation 84 'ret' 'ret_ln42' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 5.81ns
The critical path consists of the following:
	wire read on port 'AXI' (parallel_to_AXI/src/parallel_to_AXI.cpp:4) [28]  (0 ns)
	'add' operation ('add_ln324') [58]  (2.92 ns)
	blocking operation 2.89 ns on control path)

 <State 2>: 3.65ns
The critical path consists of the following:
	bus request on port 'gmem' [62]  (3.65 ns)

 <State 3>: 3.65ns
The critical path consists of the following:
	bus write on port 'gmem' [63]  (3.65 ns)

 <State 4>: 3.65ns
The critical path consists of the following:
	bus access on port 'gmem' [64]  (3.65 ns)

 <State 5>: 3.65ns
The critical path consists of the following:
	bus access on port 'gmem' [64]  (3.65 ns)

 <State 6>: 3.65ns
The critical path consists of the following:
	bus access on port 'gmem' [64]  (3.65 ns)

 <State 7>: 3.65ns
The critical path consists of the following:
	bus access on port 'gmem' [64]  (3.65 ns)

 <State 8>: 3.65ns
The critical path consists of the following:
	bus request on port 'gmem' [47]  (3.65 ns)

 <State 9>: 3.65ns
The critical path consists of the following:
	bus request on port 'gmem' [47]  (3.65 ns)

 <State 10>: 3.65ns
The critical path consists of the following:
	bus request on port 'gmem' [47]  (3.65 ns)

 <State 11>: 3.65ns
The critical path consists of the following:
	bus request on port 'gmem' [47]  (3.65 ns)

 <State 12>: 3.65ns
The critical path consists of the following:
	bus request on port 'gmem' [47]  (3.65 ns)

 <State 13>: 3.65ns
The critical path consists of the following:
	bus request on port 'gmem' [47]  (3.65 ns)

 <State 14>: 3.65ns
The critical path consists of the following:
	bus request on port 'gmem' [47]  (3.65 ns)

 <State 15>: 3.65ns
The critical path consists of the following:
	bus read on port 'gmem' [48]  (3.65 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
